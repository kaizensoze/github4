define({ "api": [  {    "type": "get",    "url": "/notifications/threads/:id/subscription",    "title": "checkNotificationThreadSubscription",    "name": "checkNotificationThreadSubscription",    "description": "<p>Check to see if the current user is subscribed to a thread.</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.checkNotificationThreadSubscription({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/user/starred/:user/:repo",    "title": "checkStarringRepo",    "name": "checkStarringRepo",    "description": "<p>Check if you are starring a repository</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.checkStarringRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "delete",    "url": "/notifications/threads/:id/subscription",    "title": "deleteNotificationThreadSubscription",    "name": "deleteNotificationThreadSubscription",    "description": "<p>Delete a notification thread subscription.</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.deleteNotificationThreadSubscription({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/events",    "title": "getEvents",    "name": "getEvents",    "description": "<p>List public events</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.getEvents({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/orgs/:org/events",    "title": "getEventsForOrg",    "name": "getEventsForOrg",    "description": "<p>List public events for an organization</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.getEventsForOrg({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/repos/:user/:repo/events",    "title": "getEventsForRepo",    "name": "getEventsForRepo",    "description": "<p>List repository events</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.getEventsForRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/repos/:user/:repo/issues/events",    "title": "getEventsForRepoIssues",    "name": "getEventsForRepoIssues",    "description": "<p>List issue events for a repository</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.getEventsForRepoIssues({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/networks/:user/:repo/events",    "title": "getEventsForRepoNetwork",    "name": "getEventsForRepoNetwork",    "description": "<p>List public events for a network of repositories</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.getEventsForRepoNetwork({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/users/:user/events",    "title": "getEventsForUser",    "name": "getEventsForUser",    "description": "<p>List events performed by a user</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.getEventsForUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/users/:user/events/orgs/:org",    "title": "getEventsForUserOrg",    "name": "getEventsForUserOrg",    "description": "<p>List events for a user's organization</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.getEventsForUserOrg({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/users/:user/events/public",    "title": "getEventsForUserPublic",    "name": "getEventsForUserPublic",    "description": "<p>List public events performed by a user</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.getEventsForUserPublic({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/users/:user/received_events",    "title": "getEventsReceived",    "name": "getEventsReceived",    "description": "<p>List events that a user has received</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.getEventsReceived({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/users/:user/received_events/public",    "title": "getEventsReceivedPublic",    "name": "getEventsReceivedPublic",    "description": "<p>List public events that a user has received</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.getEventsReceivedPublic({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/feeds",    "title": "getFeeds",    "name": "getFeeds",    "description": "<p>Get all feeds available for the authenticated user.</p>",    "group": "activity",    "examples": [      {        "title": "ex:",        "content": "github.activity.getFeeds({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/notifications/threads/:id",    "title": "getNotificationThread",    "name": "getNotificationThread",    "description": "<p>View a single notification thread.</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.getNotificationThread({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/notifications",    "title": "getNotifications",    "name": "getNotifications",    "description": "<p>Get all notifications for the current user, grouped by repository.</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "all",            "defaultValue": "false",            "description": "<p>If true, show notifications marked as read. Default: false</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "participating",            "defaultValue": "false",            "description": "<p>If true, only shows notifications in which the user is directly participating or mentioned. Default: false</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "before",            "description": "<p>Only show notifications updated before the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.getNotifications({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/repos/:user/:repo/notifications",    "title": "getNotificationsForUser",    "name": "getNotificationsForUser",    "description": "<p>Get all notifications for the given user.</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "all",            "defaultValue": "false",            "description": "<p>If true, show notifications marked as read. Default: false</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "participating",            "defaultValue": "false",            "description": "<p>If true, only shows notifications in which the user is directly participating or mentioned. Default: false</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "before",            "description": "<p>Only show notifications updated before the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.getNotificationsForUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/repos/:user/:repo/subscription",    "title": "getRepoSubscription",    "name": "getRepoSubscription",    "description": "<p>Get a Repository Subscription.</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.getRepoSubscription({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/repos/:user/:repo/stargazers",    "title": "getStargazersForRepo",    "name": "getStargazersForRepo",    "description": "<p>List Stargazers</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.getStargazersForRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/user/starred",    "title": "getStarredRepos",    "name": "getStarredRepos",    "description": "<p>List repositories being starred by the authenticated user</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.getStarredRepos({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/users/:user/starred",    "title": "getStarredReposForUser",    "name": "getStarredReposForUser",    "description": "<p>List repositories being starred by a user</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.getStarredReposForUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/user/subscriptions",    "title": "getWatchedRepos",    "name": "getWatchedRepos",    "description": "<p>List repositories being watched by the authenticated user.</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.getWatchedRepos({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/users/:user/subscriptions",    "title": "getWatchedReposForUser",    "name": "getWatchedReposForUser",    "description": "<p>List repositories being watched by a user.</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.getWatchedReposForUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "get",    "url": "/repos/:user/:repo/subscribers",    "title": "getWatchersForRepo",    "name": "getWatchersForRepo",    "description": "<p>Get watchers for repository.</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.getWatchersForRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "patch",    "url": "/notifications/threads/:id",    "title": "markNotificationThreadAsRead",    "name": "markNotificationThreadAsRead",    "description": "<p>Mark a notification thread as read.</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.markNotificationThreadAsRead({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "put",    "url": "/notifications",    "title": "markNotificationsAsRead",    "name": "markNotificationsAsRead",    "description": "<p>Mark notifications as read for authenticated user.</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "last_read_at",            "defaultValue": "Time.now",            "description": "<p>Describes the last point that notifications were checked. Anything updated since this time will not be updated. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Default: Time.now</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.markNotificationsAsRead({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "put",    "url": "/repos/:user/:repo/notifications",    "title": "markNotificationsAsReadForRepo",    "name": "markNotificationsAsReadForRepo",    "description": "<p>Mark notifications in a repo as read.</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "last_read_at",            "defaultValue": "Time.now",            "description": "<p>Describes the last point that notifications were checked. Anything updated since this time will not be updated. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Default: Time.now</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.markNotificationsAsReadForRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "put",    "url": "/notifications/threads/:id/subscription",    "title": "setNotificationThreadSubscription",    "name": "setNotificationThreadSubscription",    "description": "<p>This lets you subscribe or unsubscribe from a conversation. Unsubscribing from a conversation mutes all future notifications (until you comment or get @mentioned once more).</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "subscribed",            "description": "<p>Determines if notifications should be received from this thread</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "ignored",            "description": "<p>Determines if all notifications should be blocked from this thread</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.setNotificationThreadSubscription({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "put",    "url": "/repos/:user/:repo/subscription",    "title": "setRepoSubscription",    "name": "setRepoSubscription",    "description": "<p>Set a Repository Subscription</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "subscribed",            "description": "<p>Determines if notifications should be received from this repository.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "ignored",            "description": "<p>Determines if all notifications should be blocked from this repository.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.setRepoSubscription({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "put",    "url": "/user/starred/:user/:repo",    "title": "starRepo",    "name": "starRepo",    "description": "<p>Star a repository</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.starRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "delete",    "url": "/user/starred/:user/:repo",    "title": "unstarRepo",    "name": "unstarRepo",    "description": "<p>Unstar a repository</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.unstarRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "delete",    "url": "/repos/:user/:repo/subscription",    "title": "unwatchRepo",    "name": "unwatchRepo",    "description": "<p>Unwatch a repository.</p>",    "group": "activity",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.activity.unwatchRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "activity"  },  {    "type": "post",    "url": "/authorizations",    "title": "create",    "name": "create",    "description": "<p>Create a new authorization</p>",    "group": "authorization",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "scopes",            "description": "<p>A list of scopes that this authorization is in.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "note",            "description": "<p>A note to remind you what the OAuth token is for.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "note_url",            "description": "<p>A URL to remind you what app the OAuth token is for.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.authorization.create({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "authorization"  },  {    "type": "delete",    "url": "/authorizations/:id",    "title": "delete",    "name": "delete",    "description": "<p>Delete an authorization</p>",    "group": "authorization",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.authorization.delete({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "authorization"  },  {    "type": "get",    "url": "/authorizations/:id",    "title": "get",    "name": "get",    "description": "<p>Get a single authorization</p>",    "group": "authorization",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.authorization.get({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "authorization"  },  {    "type": "get",    "url": "/authorizations",    "title": "getAll",    "name": "getAll",    "description": "<p>List your authorizations</p>",    "group": "authorization",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.authorization.getAll({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "authorization"  },  {    "type": "patch",    "url": "/authorizations/:id",    "title": "update",    "name": "update",    "description": "<p>Update an existing authorization</p>",    "group": "authorization",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "scopes",            "description": "<p>A list of scopes that this authorization is in.</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "add_scopes",            "description": "<p>A list of scopes to add to this authorization.</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "remove_scopes",            "description": "<p>A list of scopes to remove from this authorization.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "note",            "description": "<p>A note to remind you what the OAuth token is for.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "note_url",            "description": "<p>A URL to remind you what app the OAuth token is for.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.authorization.update({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "authorization"  },  {    "type": "post",    "url": "/admin/organizations",    "title": "createOrg",    "name": "createOrg",    "description": "<p>Create an organization</p>",    "group": "enterprise",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "login",            "description": "<p>The organization's username.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "admin",            "description": "<p>The login of the user who will manage this organization.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "profile_name",            "description": "<p>The organization's display name.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.enterprise.createOrg({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "enterprise"  },  {    "type": "get",    "url": "/enterprise/settings/license",    "title": "getLicense",    "name": "getLicense",    "description": "<p>Get license information</p>",    "group": "enterprise",    "examples": [      {        "title": "ex:",        "content": "github.enterprise.getLicense({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "enterprise"  },  {    "type": "get",    "url": "/enterprise/stats/:type",    "title": "stats",    "name": "stats",    "description": "<p>Get statistics.</p>",    "group": "enterprise",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>Possible values: issues, hooks, milestones, orgs, comments, pages, users, gists, pulls, repos, all.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.enterprise.stats({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "enterprise"  },  {    "type": "post",    "url": "/admin/ldap/teams/:team_id/sync",    "title": "syncLdapForTeam",    "name": "syncLdapForTeam",    "description": "<p>Sync LDAP mapping for a team.</p>",    "group": "enterprise",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "team_id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.enterprise.syncLdapForTeam({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "enterprise"  },  {    "type": "post",    "url": "/admin/ldap/users/:user/sync",    "title": "syncLdapForUser",    "name": "syncLdapForUser",    "description": "<p>Sync LDAP mapping for a user.</p>",    "group": "enterprise",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.enterprise.syncLdapForUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "enterprise"  },  {    "type": "patch",    "url": "/admin/ldap/teams/:team_id/mapping",    "title": "updateLdapForTeam",    "name": "updateLdapForTeam",    "description": "<p>Update LDAP mapping for a team.</p>",    "group": "enterprise",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "team_id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.enterprise.updateLdapForTeam({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "enterprise"  },  {    "type": "patch",    "url": "/admin/ldap/users/:user/mapping",    "title": "updateLdapForUser",    "name": "updateLdapForUser",    "description": "<p>Update LDAP mapping for a user.</p>",    "group": "enterprise",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.enterprise.updateLdapForUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "enterprise"  },  {    "type": "get",    "url": "/gists/:id/star",    "title": "checkStar",    "name": "checkStar",    "description": "<p>Check if a gist is starred</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.checkStar({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "post",    "url": "/gists",    "title": "create",    "name": "create",    "description": "<p>Create a gist</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "files",            "description": "<p>Files that make up this gist. The key of which should be a required string filename and the value another required hash with parameters: 'content'</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "public",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.create({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "post",    "url": "/gists/:gist_id/comments",    "title": "createComment",    "name": "createComment",    "description": "<p>Create a comment</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "gist_id",            "description": "<p>Id (SHA1 hash) of the gist.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "body",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.createComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "delete",    "url": "/gists/:id",    "title": "delete",    "name": "delete",    "description": "<p>Delete a gist</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.delete({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "delete",    "url": "/gists/:gist_id/comments/:id",    "title": "deleteComment",    "name": "deleteComment",    "description": "<p>Delete a comment</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "gist_id",            "description": "<p>Id (SHA1 hash) of the gist.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.deleteComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "patch",    "url": "/gists/:id",    "title": "edit",    "name": "edit",    "description": "<p>Edit a gist</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "files",            "description": "<p>Files that make up this gist. The key of which should be a required string filename and the value another required hash with parameters: 'content'</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.edit({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "patch",    "url": "/gists/:gist_id/comments/:id",    "title": "editComment",    "name": "editComment",    "description": "<p>Edit a comment</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "gist_id",            "description": "<p>Id (SHA1 hash) of the gist.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "body",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.editComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "post",    "url": "/gists/:id/forks",    "title": "fork",    "name": "fork",    "description": "<p>Fork a gist</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.fork({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "get",    "url": "/gists/:id",    "title": "get",    "name": "get",    "description": "<p>Get a single gist</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.get({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "get",    "url": "/gists",    "title": "getAll",    "name": "getAll",    "description": "<p>List the authenticated user's gists or if called anonymously, this will return all public gists</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.getAll({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "get",    "url": "/gists/:gist_id/comments/:id",    "title": "getComment",    "name": "getComment",    "description": "<p>Get a single comment</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "gist_id",            "description": "<p>Id (SHA1 hash) of the gist.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.getComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "get",    "url": "/gists/:gist_id/comments",    "title": "getComments",    "name": "getComments",    "description": "<p>List comments on a gist</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "gist_id",            "description": "<p>Id (SHA1 hash) of the gist.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.getComments({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "get",    "url": "/gists/:id/commits",    "title": "getCommits",    "name": "getCommits",    "description": "<p>List gist commits</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.getCommits({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "get",    "url": "/users/:user/gists",    "title": "getForUser",    "name": "getForUser",    "description": "<p>List a user's gists</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.getForUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "get",    "url": "/gists/:id/forks",    "title": "getForks",    "name": "getForks",    "description": "<p>List gist forks</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.getForks({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "get",    "url": "/gists/public",    "title": "getPublic",    "name": "getPublic",    "description": "<p>List all public gists</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.getPublic({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "get",    "url": "/gists/:id/:sha",    "title": "getRevision",    "name": "getRevision",    "description": "<p>Get a specific revision of a gist</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.getRevision({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "get",    "url": "/gists/starred",    "title": "getStarred",    "name": "getStarred",    "description": "<p>List the authenticated user's starred gists</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.getStarred({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "put",    "url": "/gists/:id/star",    "title": "star",    "name": "star",    "description": "<p>Star a gist</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.star({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "delete",    "url": "/gists/:id/star",    "title": "unstar",    "name": "unstar",    "description": "<p>Unstar a gist</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.unstar({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "post",    "url": "/repos/:user/:repo/git/blobs",    "title": "createBlob",    "name": "createBlob",    "description": "<p>Create a Blob</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "encoding",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.createBlob({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "post",    "url": "/repos/:user/:repo/git/commits",    "title": "createCommit",    "name": "createCommit",    "description": "<p>Create a Commit</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>String of the commit message</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "tree",            "description": "<p>String of the SHA of the tree object this commit points to</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "parents",            "description": "<p>Array of the SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided, for a merge commit, an array of more than one should be provided.</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": true,            "field": "author",            "description": ""          },          {            "group": "Parameter",            "type": "Json",            "optional": true,            "field": "committer",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.createCommit({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "post",    "url": "/repos/:user/:repo/git/refs",    "title": "createReference",    "name": "createReference",    "description": "<p>Create a Reference</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "ref",            "description": "<p>String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.createReference({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "post",    "url": "/repos/:user/:repo/git/tags",    "title": "createTag",    "name": "createTag",    "description": "<p>Create a Tag Object</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "tag",            "description": "<p>String of the tag</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>String of the tag message</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "object",            "description": "<p>String of the SHA of the git object this is tagging</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>String of the type of the object we’re tagging. Normally this is a commit but it can also be a tree or a blob.</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "tagger",            "description": "<p>JSON object that contains the following keys: <code>name</code> - String of the name of the author of the tag, <code>email</code> - String of the email of the author of the tag, <code>date</code> - Timestamp of when this object was tagged</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.createTag({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "post",    "url": "/repos/:user/:repo/git/trees",    "title": "createTree",    "name": "createTree",    "description": "<p>Create a Tree</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "tree",            "description": "<p>Array of Hash objects (of path, mode, type and sha) specifying a tree structure</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "base_tree",            "description": "<p>String of the SHA1 of the tree you want to update with new data</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.createTree({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "delete",    "url": "/repos/:user/:repo/git/refs/:ref",    "title": "deleteReference",    "name": "deleteReference",    "description": "<p>Delete a Reference</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "ref",            "description": "<p>String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.deleteReference({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "get",    "url": "/repos/:user/:repo/git/blobs/:sha",    "title": "getBlob",    "name": "getBlob",    "description": "<p>Get a Blob</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.getBlob({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "get",    "url": "/repos/:user/:repo/git/commits/:sha",    "title": "getCommit",    "name": "getCommit",    "description": "<p>Get a Commit</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.getCommit({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "get",    "url": "/repos/:user/:repo/git/refs/:ref",    "title": "getReference",    "name": "getReference",    "description": "<p>Get a Reference</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "ref",            "description": "<p>String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.getReference({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "get",    "url": "/repos/:user/:repo/git/refs",    "title": "getReferences",    "name": "getReferences",    "description": "<p>Get all References</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.getReferences({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "get",    "url": "/repos/:user/:repo/git/tags/:sha",    "title": "getTag",    "name": "getTag",    "description": "<p>Get a Tag</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.getTag({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "get",    "url": "/repos/:user/:repo/git/refs/tags",    "title": "getTags",    "name": "getTags",    "description": "<p>Get all tag References</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.getTags({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "get",    "url": "/repos/:user/:repo/git/trees/:sha",    "title": "getTree",    "name": "getTree",    "description": "<p>Get a Tree</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "recursive",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.getTree({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "patch",    "url": "/repos/:user/:repo/git/refs/:ref",    "title": "updateReference",    "name": "updateReference",    "description": "<p>Update a Reference</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "ref",            "description": "<p>String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "force",            "defaultValue": "false",            "description": "<p>Boolean indicating whether to force the update or to make sure the update is a fast-forward update. The default is false, so leaving this out or setting it to false will make sure you’re not overwriting work.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.updateReference({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "post",    "url": "/repos/:user/:repo/issues/:number/labels",    "title": "addLabels",    "name": "addLabels",    "description": "<p>Add labels to an issue</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "body",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.addLabels({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/assignees/:assignee",    "title": "checkAssignee",    "name": "checkAssignee",    "description": "<p>Check assignee</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "assignee",            "description": "<p>Login for the user that this issue should be assigned to.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.checkAssignee({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "post",    "url": "/repos/:user/:repo/issues",    "title": "create",    "name": "create",    "description": "<p>Create an issue</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "body",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "assignee",            "description": "<p>Login for the user that this issue should be assigned to.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "milestone",            "description": "<p>Milestone to associate this issue with.</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": true,            "field": "labels",            "description": "<p>Array of strings - Labels to associate with this issue.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.create({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "post",    "url": "/repos/:user/:repo/issues/:number/comments",    "title": "createComment",    "name": "createComment",    "description": "<p>Create a comment</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "body",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.createComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "post",    "url": "/repos/:user/:repo/labels",    "title": "createLabel",    "name": "createLabel",    "description": "<p>Create a label</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "color",            "description": "<p>6 character hex code, without a leading #.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.createLabel({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "post",    "url": "/repos/:user/:repo/milestones",    "title": "createMilestone",    "name": "createMilestone",    "description": "<p>Create a milestone</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "defaultValue": "open",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": ""          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "due_on",            "description": "<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.createMilestone({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "delete",    "url": "/repos/:user/:repo/issues/comments/:id",    "title": "deleteComment",    "name": "deleteComment",    "description": "<p>Delete a comment</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.deleteComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "delete",    "url": "/repos/:user/:repo/labels/:name",    "title": "deleteLabel",    "name": "deleteLabel",    "description": "<p>Delete a label</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.deleteLabel({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "delete",    "url": "/repos/:user/:repo/milestones/:number",    "title": "deleteMilestone",    "name": "deleteMilestone",    "description": "<p>Delete a milestone</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.deleteMilestone({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "patch",    "url": "/repos/:user/:repo/issues/:number",    "title": "edit",    "name": "edit",    "description": "<p>Edit an issue</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "title",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "body",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "assignee",            "description": "<p>Login for the user that this issue should be assigned to.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "milestone",            "description": "<p>Milestone to associate this issue with.</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": true,            "field": "labels",            "description": "<p>Array of strings - Labels to associate with this issue.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "defaultValue": "open",            "description": "<p>open or closed</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.edit({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "patch",    "url": "/repos/:user/:repo/issues/comments/:id",    "title": "editComment",    "name": "editComment",    "description": "<p>Edit a comment</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "body",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.editComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/issues/:number",    "title": "get",    "name": "get",    "description": "<p>Get a single issue</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.get({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/issues",    "title": "getAll",    "name": "getAll",    "description": "<p>List all issues across all the authenticated user's visible repositories including owned repositories, member repositories, and organization repositories</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "filter",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "defaultValue": "open",            "description": "<p>open, closed, or all</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "labels",            "description": "<p>String list of comma separated Label names. Example: bug,ui,@high</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "defaultValue": "created",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "direction",            "defaultValue": "desc",            "description": ""          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getAll({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/assignees",    "title": "getAssignees",    "name": "getAssignees",    "description": "<p>List assignees</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getAssignees({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/issues/comments/:id",    "title": "getComment",    "name": "getComment",    "description": "<p>Get a single comment</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/issues/:number/comments",    "title": "getComments",    "name": "getComments",    "description": "<p>List comments on an issue</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getComments({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/issues/comments",    "title": "getCommentsForRepo",    "name": "getCommentsForRepo",    "description": "<p>List comments in a repository</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "defaultValue": "created",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "direction",            "defaultValue": "desc",            "description": ""          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getCommentsForRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/issues/events/:id",    "title": "getEvent",    "name": "getEvent",    "description": "<p>Get a single event</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getEvent({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/issues/:number/events",    "title": "getEvents",    "name": "getEvents",    "description": "<p>List events for an issue</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getEvents({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/issues/events",    "title": "getEventsForRepo",    "name": "getEventsForRepo",    "description": "<p>List events for a repository</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getEventsForRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/orgs/:org/issues",    "title": "getForOrg",    "name": "getForOrg",    "description": "<p>List all issues for a given organization for the authenticated user</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "filter",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "defaultValue": "open",            "description": "<p>open, closed, or all</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "labels",            "description": "<p>String list of comma separated Label names. Example: bug,ui,@high</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "defaultValue": "created",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "direction",            "defaultValue": "desc",            "description": ""          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getForOrg({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/issues",    "title": "getForRepo",    "name": "getForRepo",    "description": "<p>List issues for a repository</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "milestone",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "defaultValue": "open",            "description": "<p>open, closed, or all</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "assignee",            "description": "<p>String User login, <code>none</code> for Issues with no assigned User. <code>*</code> for Issues with any assigned User.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "creator",            "description": "<p>The user that created the issue.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "labels",            "description": "<p>String list of comma separated Label names. Example: bug,ui,@high</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "defaultValue": "created",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "direction",            "defaultValue": "desc",            "description": ""          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "mentioned",            "description": "<p>String User login.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getForRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/user/issues",    "title": "getForUser",    "name": "getForUser",    "description": "<p>List all issues across owned and member repositories for the authenticated user</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "filter",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "defaultValue": "open",            "description": "<p>open, closed, or all</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "labels",            "description": "<p>String list of comma separated Label names. Example: bug,ui,@high</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "defaultValue": "created",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "direction",            "defaultValue": "desc",            "description": ""          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getForUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/issues/:number/labels",    "title": "getIssueLabels",    "name": "getIssueLabels",    "description": "<p>List labels on an issue</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getIssueLabels({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/labels/:name",    "title": "getLabel",    "name": "getLabel",    "description": "<p>Get a single label</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getLabel({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/labels",    "title": "getLabels",    "name": "getLabels",    "description": "<p>List all labels for this repository</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getLabels({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/milestones/:number",    "title": "getMilestone",    "name": "getMilestone",    "description": "<p>Get a single milestone</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getMilestone({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/milestones/:number/labels",    "title": "getMilestoneLabels",    "name": "getMilestoneLabels",    "description": "<p>Get labels for every issue in a milestone</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getMilestoneLabels({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/milestones",    "title": "getMilestones",    "name": "getMilestones",    "description": "<p>List milestones for a repository</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "defaultValue": "open",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "defaultValue": "due_on",            "description": "<p>due_on, completeness, default: due_on</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "direction",            "defaultValue": "asc",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getMilestones({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "delete",    "url": "/repos/:user/:repo/issues/:number/labels",    "title": "removeAllLabels",    "name": "removeAllLabels",    "description": "<p>Remove all labels from an issue</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.removeAllLabels({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "delete",    "url": "/repos/:user/:repo/issues/:number/labels/:name",    "title": "removeLabel",    "name": "removeLabel",    "description": "<p>Remove a label from an issue</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.removeLabel({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "put",    "url": "/repos/:user/:repo/issues/:number/labels",    "title": "replaceAllLabels",    "name": "replaceAllLabels",    "description": "<p>Replace all labels for an issue</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "body",            "description": "<p>Sending an empty array ([]) will remove all Labels from the Issue.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.replaceAllLabels({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "patch",    "url": "/repos/:user/:repo/labels/:name",    "title": "updateLabel",    "name": "updateLabel",    "description": "<p>Update a label</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "color",            "description": "<p>6 character hex code, without a leading #.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.updateLabel({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "patch",    "url": "/repos/:user/:repo/milestones/:number",    "title": "updateMilestone",    "name": "updateMilestone",    "description": "<p>Update a milestone</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "defaultValue": "open",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": ""          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "due_on",            "description": "<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.updateMilestone({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/emojis",    "title": "getEmojis",    "name": "getEmojis",    "description": "<p>Lists all the emojis available to use on GitHub.</p>",    "group": "misc",    "examples": [      {        "title": "ex:",        "content": "github.misc.getEmojis({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "misc"  },  {    "type": "get",    "url": "/gitignore/templates/:name",    "title": "getGitignoreTemplate",    "name": "getGitignoreTemplate",    "description": "<p>Get a single gitignore template</p>",    "group": "misc",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The name of the .gitignore template to get e.g. 'C'</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.misc.getGitignoreTemplate({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "misc"  },  {    "type": "get",    "url": "/gitignore/templates",    "title": "getGitignoreTemplates",    "name": "getGitignoreTemplates",    "description": "<p>Lists available gitignore templates</p>",    "group": "misc",    "examples": [      {        "title": "ex:",        "content": "github.misc.getGitignoreTemplates({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "misc"  },  {    "type": "get",    "url": "/licenses/:license",    "title": "getLicense",    "name": "getLicense",    "description": "<p>Get an individual license</p>",    "group": "misc",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "license",            "description": "<p>Ex: /licenses/mit</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.misc.getLicense({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "misc"  },  {    "type": "get",    "url": "/licenses",    "title": "getLicenses",    "name": "getLicenses",    "description": "<p>List all licenses</p>",    "group": "misc",    "examples": [      {        "title": "ex:",        "content": "github.misc.getLicenses({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "misc"  },  {    "type": "get",    "url": "/meta",    "title": "getMeta",    "name": "getMeta",    "description": "<p>This endpoint provides information about GitHub.com, the service. Or, if you access this endpoint on your organization's GitHub Enterprise installation, this endpoint provides information about that installation.</p>",    "group": "misc",    "examples": [      {        "title": "ex:",        "content": "github.misc.getMeta({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "misc"  },  {    "type": "get",    "url": "/rate_limit",    "title": "getRateLimit",    "name": "getRateLimit",    "description": "<p>Get your current rate limit status</p>",    "group": "misc",    "examples": [      {        "title": "ex:",        "content": "github.misc.getRateLimit({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "misc"  },  {    "type": "get",    "url": "/repos/:user/:repo/license",    "title": "getRepoLicense",    "name": "getRepoLicense",    "description": "<p>Get the contents of a repository's license</p>",    "group": "misc",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.misc.getRepoLicense({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "misc"  },  {    "type": "post",    "url": "/markdown",    "title": "renderMarkdown",    "name": "renderMarkdown",    "description": "<p>Render an arbitrary Markdown document</p>",    "group": "misc",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "text",            "description": "<p>The Markdown text to render</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "mode",            "description": "<p>The rendering mode, <code>markdown</code> to render a document as plain Markdown, just like README files are rendered. <code>gfm</code> to render a document as user-content, e.g. like user comments or issues are rendered. In GFM mode, hard line breaks are always taken into account, and issue and user mentions are linked accordingly.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "context",            "description": "<p>The repository context, only taken into account when rendering as <code>gfm</code></p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.misc.renderMarkdown({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "misc"  },  {    "type": "post",    "url": "/markdown/raw",    "title": "renderMarkdownRaw",    "name": "renderMarkdownRaw",    "description": "<p>Render a Markdown document in raw mode</p>",    "group": "misc",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "data",            "description": "<p>Raw data to send as the body of the request</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.misc.renderMarkdownRaw({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "misc"  },  {    "type": "put",    "url": "/orgs/:org/memberships/:user",    "title": "addOrganizationMembership",    "name": "addOrganizationMembership",    "description": "<p>Add or update organization membership</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>The role to give the user in the organization.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.addOrganizationMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "put",    "url": "/teams/:id/memberships/:user",    "title": "addTeamMembership",    "name": "addTeamMembership",    "description": "<p>Add team membership</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "role",            "defaultValue": "member",            "description": "<p>The role that this user should have in the team.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.addTeamMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "put",    "url": "/teams/:id/repos/:user/:repo",    "title": "addTeamRepo",    "name": "addTeamRepo",    "description": "<p>Add team repository</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.addTeamRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org/members/:user",    "title": "checkMembership",    "name": "checkMembership",    "description": "<p>Check membership</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.checkMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org/public_members/:user",    "title": "checkPublicMembership",    "name": "checkPublicMembership",    "description": "<p>Check public membership</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.checkPublicMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/teams/:id/repos/:user/:repo",    "title": "checkTeamRepo",    "name": "checkTeamRepo",    "description": "<p>Check if a team manages a repository</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.checkTeamRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "delete",    "url": "/orgs/:org/public_members/:user",    "title": "concealMembership",    "name": "concealMembership",    "description": "<p>Conceal a user's membership</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.concealMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "post",    "url": "/orgs/:org/hooks",    "title": "createHook",    "name": "createHook",    "description": "<p>Create a hook</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Must be passed as &quot;web&quot;.</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "config",            "description": "<p>Key/value pairs to provide settings for this webhook</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "events",            "defaultValue": "[\"push\"",            "description": "<p>Determines what events the hook is triggered for. Default: [&quot;push&quot;].</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "active",            "description": "<p>Determines whether the hook is actually triggered on pushes.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.createHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "post",    "url": "/orgs/:org/teams",    "title": "createTeam",    "name": "createTeam",    "description": "<p>Create team</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>The description of the team.</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "repo_names",            "description": "<p>The full name (e.g., &quot;organization-name/repository-name&quot;) of repositories to add the team to.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "privacy",            "defaultValue": "secret",            "description": "<p>The level of privacy this team should have.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.createTeam({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "delete",    "url": "/orgs/:org/hooks/:id",    "title": "deleteHook",    "name": "deleteHook",    "description": "<p>Delete a hook</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.deleteHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "delete",    "url": "/orgs/:org/migrations/:id/archive",    "title": "deleteMigrationArchive",    "name": "deleteMigrationArchive",    "description": "<p>Delete a migration archive</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.deleteMigrationArchive({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "delete",    "url": "/teams/:id",    "title": "deleteTeam",    "name": "deleteTeam",    "description": "<p>undefined</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.deleteTeam({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "delete",    "url": "/teams/:id/repos/:user/:repo",    "title": "deleteTeamRepo",    "name": "deleteTeamRepo",    "description": "<p>Remove team repository</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.deleteTeamRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "patch",    "url": "/orgs/:org/hooks/:id",    "title": "editHook",    "name": "editHook",    "description": "<p>Edit a hook</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "config",            "description": "<p>Key/value pairs to provide settings for this webhook</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "events",            "defaultValue": "[\"push\"",            "description": "<p>Determines what events the hook is triggered for. Default: [&quot;push&quot;].</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "active",            "description": "<p>Determines whether the hook is actually triggered on pushes.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.editHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "patch",    "url": "/teams/:id",    "title": "editTeam",    "name": "editTeam",    "description": "<p>Edit team</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>The description of the team.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "privacy",            "defaultValue": "secret",            "description": "<p>The level of privacy this team should have.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.editTeam({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org",    "title": "get",    "name": "get",    "description": "<p>Get an organization</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.get({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/organizations",    "title": "getAll",    "name": "getAll",    "description": "<p>List all organizations</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "since",            "description": "<p>The integer ID of the last Organization that you've seen.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getAll({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/users/:user/orgs",    "title": "getForUser",    "name": "getForUser",    "description": "<p>List user's organizations</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getForUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org/hooks/:id",    "title": "getHook",    "name": "getHook",    "description": "<p>Get single hook</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org/hooks",    "title": "getHooks",    "name": "getHooks",    "description": "<p>List hooks</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getHooks({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org/members",    "title": "getMembers",    "name": "getMembers",    "description": "<p>Members list</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "filter",            "defaultValue": "all",            "description": "<p>Filter members returned in the list.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "role",            "defaultValue": "all",            "description": "<p>Filter members returned by their role.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getMembers({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org/migrations/:id/archive",    "title": "getMigrationArchiveLink",    "name": "getMigrationArchiveLink",    "description": "<p>Get the URL to a migration archive.</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getMigrationArchiveLink({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org/migrations/:id",    "title": "getMigrationStatus",    "name": "getMigrationStatus",    "description": "<p>Get the status of a migration</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getMigrationStatus({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org/migrations",    "title": "getMigrations",    "name": "getMigrations",    "description": "<p>Get a list of migrations</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getMigrations({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org/memberships/:user",    "title": "getOrganizationMembership",    "name": "getOrganizationMembership",    "description": "<p>Get organization membership</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getOrganizationMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/user/memberships/orgs",    "title": "getOrganizationMemberships",    "name": "getOrganizationMemberships",    "description": "<p>List your organization memberships</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "description": "<p>Indicates the state of the memberships to return. Can be either active or pending. If not specified, both active and pending memberships are returned.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getOrganizationMemberships({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org/public_members",    "title": "getPublicMembers",    "name": "getPublicMembers",    "description": "<p>Public members list</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getPublicMembers({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/teams/:id",    "title": "getTeam",    "name": "getTeam",    "description": "<p>Get team</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getTeam({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/teams/:id/members",    "title": "getTeamMembers",    "name": "getTeamMembers",    "description": "<p>undefined</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "role",            "defaultValue": "all",            "description": "<p>Filters members returned by their role in the team.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getTeamMembers({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/teams/:id/memberships/:user",    "title": "getTeamMembership",    "name": "getTeamMembership",    "description": "<p>Get team membership</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getTeamMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/teams/:id/repos",    "title": "getTeamRepos",    "name": "getTeamRepos",    "description": "<p>Get team repos</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getTeamRepos({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org/teams",    "title": "getTeams",    "name": "getTeams",    "description": "<p>List teams</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getTeams({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "post",    "url": "/orgs/:org/hooks/:id/pings",    "title": "pingHook",    "name": "pingHook",    "description": "<p>Ping a hook</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.pingHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "put",    "url": "/orgs/:org/public_members/:user",    "title": "publicizeMembership",    "name": "publicizeMembership",    "description": "<p>Publicize a user's membership</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.publicizeMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "delete",    "url": "/orgs/:org/members/:user",    "title": "removeMember",    "name": "removeMember",    "description": "<p>Remove a member</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.removeMember({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "delete",    "url": "/orgs/:org/memberships/:user",    "title": "removeOrganizationMembership",    "name": "removeOrganizationMembership",    "description": "<p>Remove organization membership</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.removeOrganizationMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "delete",    "url": "/teams/:id/memberships/:user",    "title": "removeTeamMembership",    "name": "removeTeamMembership",    "description": "<p>Remove team membership</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.removeTeamMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "post",    "url": "/orgs/:org/migrations",    "title": "startMigration",    "name": "startMigration",    "description": "<p>Start a migration</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "repositories",            "description": "<p>A list of arrays indicating which repositories should be migrated.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "lock_repositories",            "defaultValue": "false",            "description": "<p>Indicates whether repositories should be locked (to prevent manipulation) while migrating data. Default: false.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "exclude_attachments",            "defaultValue": "false",            "description": "<p>Indicates whether attachments should be excluded from the migration (to reduce migration archive file size). Default: false.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.startMigration({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "delete",    "url": "/orgs/:org/migrations/:id/repos/:repo/lock",    "title": "unlockRepoLockedForMigration",    "name": "unlockRepoLockedForMigration",    "description": "<p>Unlock a repository that was locked for migration.</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.unlockRepoLockedForMigration({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "patch",    "url": "/orgs/:org",    "title": "update",    "name": "update",    "description": "<p>Edit an organization</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "billing_email",            "description": "<p>Billing email address. This address is not publicized.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "company",            "description": "<p>The company name.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>The publicly visible email address.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "location",            "description": "<p>The location.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>The shorthand name of the company.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>The description of the company.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.update({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/repos/:user/:repo/pulls/:number/merge",    "title": "checkMerged",    "name": "checkMerged",    "description": "<p>Get if a pull request has been merged</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.checkMerged({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "post",    "url": "/repos/:user/:repo/pulls",    "title": "create",    "name": "create",    "description": "<p>Create a pull request</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>The title of the pull request.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "head",            "description": "<p>The branch (or git ref) where your changes are implemented.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "base",            "description": "<p>The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "body",            "description": "<p>The contents of the pull request.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.create({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "post",    "url": "/repos/:user/:repo/pulls/:number/comments",    "title": "createComment",    "name": "createComment",    "description": "<p>Create a comment</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "body",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "commit_id",            "description": "<p>Sha of the commit to comment on.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "path",            "description": "<p>Relative path of the file to comment on.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "position",            "description": "<p>Column index in the diff to comment on.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.createComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "post",    "url": "/repos/:user/:repo/pulls/:number/comments",    "title": "createCommentReply",    "name": "createCommentReply",    "description": "<p>Reply to existing pull request comment</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "body",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "in_reply_to",            "description": "<p>The comment id to reply to.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.createCommentReply({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "post",    "url": "/repos/:user/:repo/pulls",    "title": "createFromIssue",    "name": "createFromIssue",    "description": "<p>Create a pull request from an existing issue</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "issue",            "description": "<p>The issue number in this repository to turn into a Pull Request.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "head",            "description": "<p>The branch (or git ref) where your changes are implemented.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "base",            "description": "<p>The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.createFromIssue({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "delete",    "url": "/repos/:user/:repo/pulls/comments/:number",    "title": "deleteComment",    "name": "deleteComment",    "description": "<p>Delete a comment</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.deleteComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "patch",    "url": "/repos/:user/:repo/pulls/comments/:number",    "title": "editComment",    "name": "editComment",    "description": "<p>Edit a comment</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "body",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.editComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "get",    "url": "/repos/:user/:repo/pulls/:number",    "title": "get",    "name": "get",    "description": "<p>Get a single pull request</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.get({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "get",    "url": "/repos/:user/:repo/pulls",    "title": "getAll",    "name": "getAll",    "description": "<p>List pull requests</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "defaultValue": "open",            "description": "<p>open, closed, or all</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "head",            "description": "<p>Filter pulls by head user and branch name in the format of user:ref-name. Example: github:new-script-format.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "base",            "description": "<p>Filter pulls by base branch name. Example: gh-pages.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "defaultValue": "created",            "description": "<p>Possible values are: <code>created</code>, <code>updated</code>, <code>popularity</code>, <code>long-running</code>, Default: <code>created</code></p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "direction",            "defaultValue": "desc",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.getAll({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "get",    "url": "/repos/:user/:repo/pulls/comments/:number",    "title": "getComment",    "name": "getComment",    "description": "<p>Get a single comment</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.getComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "get",    "url": "/repos/:user/:repo/pulls/:number/comments",    "title": "getComments",    "name": "getComments",    "description": "<p>List comments on a pull request</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.getComments({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "get",    "url": "/repos/:user/:repo/pulls/comments",    "title": "getCommentsForRepo",    "name": "getCommentsForRepo",    "description": "<p>List comments in a repository</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "defaultValue": "created",            "description": "<p>Possible values are: <code>created</code>, <code>updated</code>, Default: <code>created</code></p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "direction",            "defaultValue": "desc",            "description": ""          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.getCommentsForRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "get",    "url": "/repos/:user/:repo/pulls/:number/commits",    "title": "getCommits",    "name": "getCommits",    "description": "<p>List commits on a pull request</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.getCommits({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "get",    "url": "/repos/:user/:repo/pulls/:number/files",    "title": "getFiles",    "name": "getFiles",    "description": "<p>List pull requests files</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.getFiles({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "put",    "url": "/repos/:user/:repo/pulls/:number/merge",    "title": "merge",    "name": "merge",    "description": "<p>Merge a pull request (Merge Button)</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "commit_message",            "description": "<p>Extra detail to append to automatic commit message.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sha",            "description": "<p>SHA that pull request head must match to allow merge</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.merge({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "patch",    "url": "/repos/:user/:repo/pulls/:number",    "title": "update",    "name": "update",    "description": "<p>Update a pull request</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "title",            "description": "<p>The title of the pull request.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "body",            "description": "<p>The contents of the pull request.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "defaultValue": "open",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.update({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "put",    "url": "/repos/:user/:repo/collaborators/:collabuser",    "title": "addCollaborator",    "name": "addCollaborator",    "description": "<p>Add user as a collaborator</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "collabuser",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.addCollaborator({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/collaborators/:collabuser",    "title": "checkCollaborator",    "name": "checkCollaborator",    "description": "<p>Check if user is a collaborator.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "collabuser",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.checkCollaborator({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/compare/:base...:head",    "title": "compareCommits",    "name": "compareCommits",    "description": "<p>Compare two commits.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "base",            "description": "<p>The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "head",            "description": "<p>The branch (or git ref) where your changes are implemented.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.compareCommits({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/user/repos",    "title": "create",    "name": "create",    "description": "<p>Create a new repository for the authenticated user.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "homepage",            "description": ""          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "private",            "defaultValue": "false",            "description": "<p>True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "has_issues",            "defaultValue": "true",            "description": "<p>True to enable issues for this repository, false to disable them. Default is true.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "has_wiki",            "defaultValue": "true",            "description": "<p>True to enable the wiki for this repository, false to disable it. Default is true.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "has_downloads",            "defaultValue": "true",            "description": "<p>True to enable downloads for this repository, false to disable them. Default is true.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "auto_init",            "defaultValue": "false",            "description": "<p>True to create an initial commit with empty README. Default is false</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "gitignore_template",            "description": "<p>Desired language or platform .gitignore template to apply. Ignored if auto_init parameter is not provided.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "license_template",            "description": "<p>Desired LICENSE template to apply. Use the name of the template without the extension. For example, &quot;mit&quot; or &quot;mozilla&quot;.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.create({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/repos/:user/:repo/commits/:sha/comments",    "title": "createCommitComment",    "name": "createCommitComment",    "description": "<p>Create a commit comment.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "body",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "path",            "description": "<p>Relative path of the file to comment on.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "position",            "description": "<p>Line index in the diff to comment on.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "line",            "description": "<p>Deprecated. Use position parameter instead. Line number in the file to comment on.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.createCommitComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/repos/:user/:repo/deployments",    "title": "createDeployment",    "name": "createDeployment",    "description": "<p>Create a deployment.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "ref",            "description": "<p>The ref to deploy. This can be a branch, tag, or sha.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "task",            "defaultValue": "deploy",            "description": "<p>The named task to execute. e.g. deploy or deploy:migrations. Default: deploy</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "auto_merge",            "defaultValue": "true",            "description": "<p>Optional parameter to merge the default branch into the requested ref if it is behind the default branch. Default: true</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "required_contexts",            "description": "<p>Optional array of status contexts verified against commit status checks. If this parameter is omitted from the parameters then all unique contexts will be verified before a deployment is created. To bypass checking entirely pass an empty array. Defaults to all unique contexts.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "payload",            "description": "<p>Optional JSON payload with extra information about the deployment. Default: &quot;&quot;</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "environment",            "defaultValue": "none",            "description": "<p>The name of the environment that was deployed to. e.g. staging or production. Default: none.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Optional short description. Default: &quot;&quot;</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.createDeployment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/repos/:user/:repo/deployments/:id/statuses",    "title": "createDeploymentStatus",    "name": "createDeploymentStatus",    "description": "<p>Create a deployment status.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "description": "<p>The state of the status. Can be one of pending, success, error, or failure.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "target_url",            "description": "<p>The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. Default: &quot;&quot;</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>A short description of the status. Default: &quot;&quot;</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.createDeploymentStatus({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "put",    "url": "/repos/:user/:repo/contents/:path",    "title": "createFile",    "name": "createFile",    "description": "<p>Create a new file in the given repository.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "path",            "description": "<p>The content path.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>The commit message.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>The new file content, Base64 encoded.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "branch",            "description": "<p>The branch name. If not provided, uses the repository’s default branch (usually master).</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": true,            "field": "committer",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.createFile({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/orgs/:org/repos",    "title": "createForOrg",    "name": "createForOrg",    "description": "<p>Create a new repository for an organization.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "homepage",            "description": ""          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "private",            "defaultValue": "false",            "description": "<p>True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "has_issues",            "defaultValue": "true",            "description": "<p>True to enable issues for this repository, false to disable them. Default is true.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "license_template",            "description": "<p>Desired LICENSE template to apply. Use the name of the template without the extension. For example, &quot;mit&quot; or &quot;mozilla&quot;.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "has_downloads",            "defaultValue": "true",            "description": "<p>True to enable downloads for this repository, false to disable them. Default is true.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "team_id",            "description": "<p>The id of the team that will be granted access to this repository. This is only valid when creating a repo in an organization.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "auto_init",            "defaultValue": "false",            "description": "<p>True to create an initial commit with empty README. Default is false</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "gitignore_template",            "description": "<p>Desired language or platform .gitignore template to apply. Ignored if auto_init parameter is not provided.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "has_wiki",            "defaultValue": "true",            "description": "<p>True to enable the wiki for this repository, false to disable it. Default is true.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.createForOrg({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/repos/:user/:repo/hooks",    "title": "createHook",    "name": "createHook",    "description": "<p>Create a hook.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "config",            "description": "<p>A Hash containing key/value pairs to provide settings for this hook. These settings vary between the services and are defined in the github-services repo. Booleans are stored internally as <code>1</code> for true, and <code>0</code> for false. Any JSON true/false values will be converted automatically.</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "events",            "defaultValue": "[\"push\"",            "description": "<p>Determines what events the hook is triggered for. Default: <code>['push']</code>.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "active",            "description": "<p>Determines whether the hook is actually triggered on pushes.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.createHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/repos/:user/:repo/keys",    "title": "createKey",    "name": "createKey",    "description": "<p>Add a new deploy key.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "key",            "description": ""          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "read_only",            "description": "<p>If true, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.createKey({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/repos/:user/:repo/releases",    "title": "createRelease",    "name": "createRelease",    "description": "<p>Create a release.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "tag_name",            "description": "<p>String of the tag</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "target_commitish",            "description": "<p>Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually master).</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "body",            "description": ""          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "draft",            "defaultValue": "false",            "description": "<p>true to create a draft (unpublished) release, false to create a published one. Default: false</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "prerelease",            "defaultValue": "false",            "description": "<p>true to identify the release as a prerelease. false to identify the release as a full release. Default: false</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.createRelease({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/repos/:user/:repo/statuses/:sha",    "title": "createStatus",    "name": "createStatus",    "description": "<p>Create a status.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "state",            "description": "<p>State of the status - can be one of pending, success, error, or failure.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "target_url",            "description": "<p>Target url to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the ‘source’ of the Status.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Short description of the status.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "context",            "description": "<p>A string label to differentiate this status from the status of other systems.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.createStatus({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "delete",    "url": "/repos/:user/:repo",    "title": "delete",    "name": "delete",    "description": "<p>Delete a repository.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.delete({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "delete",    "url": "/repos/:user/:repo/releases/assets/:id",    "title": "deleteAsset",    "name": "deleteAsset",    "description": "<p>Delete a release asset.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.deleteAsset({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "delete",    "url": "/repos/:user/:repo/comments/:id",    "title": "deleteCommitComment",    "name": "deleteCommitComment",    "description": "<p>Delete a commit comment.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.deleteCommitComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "delete",    "url": "/repos/:user/:repo/downloads/:id",    "title": "deleteDownload",    "name": "deleteDownload",    "description": "<p>Delete a download.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.deleteDownload({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "delete",    "url": "/repos/:user/:repo/contents/:path",    "title": "deleteFile",    "name": "deleteFile",    "description": "<p>Delete a file.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "path",            "description": "<p>The content path.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>The commit message.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": "<p>The blob SHA of the file being removed.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "branch",            "description": "<p>The branch name. If not provided, uses the repository’s default branch (usually master).</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": true,            "field": "committer",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.deleteFile({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "delete",    "url": "/repos/:user/:repo/hooks/:id",    "title": "deleteHook",    "name": "deleteHook",    "description": "<p>Deleate a hook.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.deleteHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "delete",    "url": "/repos/:user/:repo/keys/:id",    "title": "deleteKey",    "name": "deleteKey",    "description": "<p>Remove a deploy key.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.deleteKey({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "delete",    "url": "/repos/:user/:repo/releases/:id",    "title": "deleteRelease",    "name": "deleteRelease",    "description": "<p>Delete a release</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.deleteRelease({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "patch",    "url": "/repos/:user/:repo",    "title": "edit",    "name": "edit",    "description": "<p>Update a repo.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "homepage",            "description": ""          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "private",            "defaultValue": "false",            "description": "<p>True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "has_issues",            "defaultValue": "true",            "description": "<p>True to enable issues for this repository, false to disable them. Default is true.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "has_wiki",            "defaultValue": "true",            "description": "<p>True to enable the wiki for this repository, false to disable it. Default is true.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "has_downloads",            "defaultValue": "true",            "description": "<p>True to enable downloads for this repository, false to disable them. Default is true.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "default_branch",            "description": "<p>Updates the default branch for this repository.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.edit({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "patch",    "url": "/repos/:user/:repo/releases/assets/:id",    "title": "editAsset",    "name": "editAsset",    "description": "<p>Edit a release asset.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "label",            "description": "<p>An alternate short description of the asset. Used in place of the filename.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.editAsset({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "patch",    "url": "/repos/:user/:repo/hooks/:id",    "title": "editHook",    "name": "editHook",    "description": "<p>Edit a hook.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "config",            "description": "<p>A Hash containing key/value pairs to provide settings for this hook. Modifying this will replace the entire config object. These settings vary between the services and are defined in the github-services repo. Booleans are stored internally as <code>1</code> for true, and <code>0</code> for false. Any JSON true/false values will be converted automatically.</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "events",            "defaultValue": "[\"push\"",            "description": "<p>Determines what events the hook is triggered for. This replaces the entire array of events. Default: <code>['push']</code>.</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "add_events",            "description": "<p>Determines a list of events to be added to the list of events that the Hook triggers for.</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "remove_events",            "description": "<p>Determines a list of events to be removed from the list of events that the Hook triggers for.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "active",            "description": "<p>Determines whether the hook is actually triggered on pushes.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.editHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "patch",    "url": "/repos/:user/:repo/releases/:id",    "title": "editRelease",    "name": "editRelease",    "description": "<p>Edit a release.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "tag_name",            "description": "<p>String of the tag</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "target_commitish",            "description": "<p>Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually master).</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "body",            "description": ""          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "draft",            "defaultValue": "false",            "description": "<p>true to create a draft (unpublished) release, false to create a published one. Default: false</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "prerelease",            "defaultValue": "false",            "description": "<p>true to identify the release as a prerelease. false to identify the release as a full release. Default: false</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.editRelease({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/repos/:user/:repo/forks",    "title": "fork",    "name": "fork",    "description": "<p>Create a fork.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "organization",            "description": "<p>Optional parameter to specify the organization name if forking into an organization.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.fork({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo",    "title": "get",    "name": "get",    "description": "<p>Get a repo for a user.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.get({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/user/repos",    "title": "getAll",    "name": "getAll",    "description": "<p>List your repositories</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "visibility",            "defaultValue": "all",            "description": "<p>Can be one of <code>all</code>, <code>public</code>, or <code>private</code>. Default: <code>all</code>.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "affiliation",            "defaultValue": "owner,collaborator,organization_member",            "description": "<p>Comma-separated list of values. Can include: <code>owner</code>, <code>collaborator</code>, <code>organization_member</code>.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "type",            "defaultValue": "all",            "description": "<p>Possible values: <code>all</code>, <code>owner</code>, <code>public</code>, <code>private</code>, <code>member</code>. Default: <code>all</code>.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "defaultValue": "full_name",            "description": "<p>Possible values: <code>created</code>, <code>updated</code>, <code>pushed</code>, <code>full_name</code>. Default: <code>full_name</code>.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "direction",            "defaultValue": "desc",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getAll({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/comments",    "title": "getAllCommitComments",    "name": "getAllCommitComments",    "description": "<p>List commit comments for a repository.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getAllCommitComments({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/:archive_format/:ref",    "title": "getArchiveLink",    "name": "getArchiveLink",    "description": "<p>Get archive link.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "archive_format",            "defaultValue": "tarball",            "description": "<p>Either tarball or zipball, Deafult: tarball.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "ref",            "description": "<p>String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getArchiveLink({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/releases/assets/:id",    "title": "getAsset",    "name": "getAsset",    "description": "<p>Get a single release asset.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getAsset({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/branches/:branch",    "title": "getBranch",    "name": "getBranch",    "description": "<p>Get a branch</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "branch",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getBranch({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/branches",    "title": "getBranches",    "name": "getBranches",    "description": "<p>Get branches for the specified repository.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getBranches({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/collaborators",    "title": "getCollaborators",    "name": "getCollaborators",    "description": "<p>List collaborators</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getCollaborators({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/commits/:sha/status",    "title": "getCombinedStatus",    "name": "getCombinedStatus",    "description": "<p>Get the combined status for a specific ref.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getCombinedStatus({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/commits/:sha",    "title": "getCommit",    "name": "getCommit",    "description": "<p>Get a single commit.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getCommit({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/comments/:id",    "title": "getCommitComment",    "name": "getCommitComment",    "description": "<p>Get a single commit comment.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getCommitComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/commits/:sha/comments",    "title": "getCommitComments",    "name": "getCommitComments",    "description": "<p>List comments for a single commit.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getCommitComments({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/commits",    "title": "getCommits",    "name": "getCommits",    "description": "<p>List commits on a repository.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sha",            "description": "<p>Sha or branch to start listing commits from.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "path",            "description": "<p>Only commits containing this file path will be returned.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "author",            "description": "<p>GitHub login or email address by which to filter by commit author.</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "until",            "description": "<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getCommits({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/contents/:path",    "title": "getContent",    "name": "getContent",    "description": "<p>Get the contents of a file or directory in a repository.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "path",            "description": "<p>The content path.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "ref",            "description": "<p>The String name of the Commit/Branch/Tag. Defaults to master.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getContent({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/contributors",    "title": "getContributors",    "name": "getContributors",    "description": "<p>Get contributors for the specified repository.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "anon",            "description": "<p>Set to 1 or true to include anonymous contributors in results.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getContributors({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/deployments/:id/statuses",    "title": "getDeploymentStatuses",    "name": "getDeploymentStatuses",    "description": "<p>List deployment statuses.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getDeploymentStatuses({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/deployments",    "title": "getDeployments",    "name": "getDeployments",    "description": "<p>List deployments.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sha",            "defaultValue": "none",            "description": "<p>The short or long sha that was recorded at creation time. Default: none.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "ref",            "defaultValue": "none",            "description": "<p>The name of the ref. This can be a branch, tag, or sha. Default: none.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "task",            "defaultValue": "none",            "description": "<p>The name of the task for the deployment. e.g. deploy or deploy:migrations. Default: none.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "environment",            "defaultValue": "none",            "description": "<p>The name of the environment that was deployed to. e.g. staging or production. Default: none.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getDeployments({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/downloads/:id",    "title": "getDownload",    "name": "getDownload",    "description": "<p>Get a single download.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getDownload({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/downloads",    "title": "getDownloads",    "name": "getDownloads",    "description": "<p>List downloads for repository.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getDownloads({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/orgs/:org/repos",    "title": "getForOrg",    "name": "getForOrg",    "description": "<p>List repositories for the specified org.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "type",            "defaultValue": "all",            "description": "<p>Possible values: <code>all</code>, <code>public</code>, <code>private</code>, <code>forks</code>, <code>sources</code>, <code>member</code>. Default: <code>all</code>.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getForOrg({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/users/:user/repos",    "title": "getForUser",    "name": "getForUser",    "description": "<p>List public repositories for the specified user.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "type",            "defaultValue": "owner",            "description": "<p>Possible values: <code>all</code>, <code>owner</code>, <code>member</code>. Default: <code>owner</code>.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "defaultValue": "full_name",            "description": "<p>Possible values: <code>created</code>, <code>updated</code>, <code>pushed</code>, <code>full_name</code>. Default: <code>full_name</code>.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "direction",            "defaultValue": "desc",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getForUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/forks",    "title": "getForks",    "name": "getForks",    "description": "<p>List forks.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "defaultValue": "newest",            "description": "<p>Possible values: <code>newest</code>, <code>oldest</code>, <code>stargazers</code>, default: <code>newest</code>.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getForks({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/hooks/:id",    "title": "getHook",    "name": "getHook",    "description": "<p>Get single hook.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/hooks",    "title": "getHooks",    "name": "getHooks",    "description": "<p>List hooks.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getHooks({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/keys/:id",    "title": "getKey",    "name": "getKey",    "description": "<p>Get a deploy key.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getKey({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/keys",    "title": "getKeys",    "name": "getKeys",    "description": "<p>List deploy keys.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getKeys({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/languages",    "title": "getLanguages",    "name": "getLanguages",    "description": "<p>Get languages for the specified repository.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getLanguages({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/pages/builds/latest",    "title": "getLatestPagesBuild",    "name": "getLatestPagesBuild",    "description": "<p>Get latest Pages build</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getLatestPagesBuild({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/releases/latest",    "title": "getLatestRelease",    "name": "getLatestRelease",    "description": "<p>Get the latest release.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getLatestRelease({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/pages",    "title": "getPages",    "name": "getPages",    "description": "<p>Get information about a Pages site</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getPages({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/pages/builds",    "title": "getPagesBuilds",    "name": "getPagesBuilds",    "description": "<p>List Pages builds</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getPagesBuilds({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repositories",    "title": "getPublic",    "name": "getPublic",    "description": "<p>List all public repositories</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "since",            "description": "<p>The integer ID of the last Repository that you've seen.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getPublic({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/readme",    "title": "getReadme",    "name": "getReadme",    "description": "<p>Get the README for the given repository.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "ref",            "description": "<p>The name of the commit/branch/tag. Default: the repository’s default branch (usually master)</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getReadme({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/releases/:id",    "title": "getRelease",    "name": "getRelease",    "description": "<p>Get a single release.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getRelease({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/releases/tags/:tag",    "title": "getReleaseByTag",    "name": "getReleaseByTag",    "description": "<p>Get a release by tag name.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "tag",            "description": "<p>String of the tag</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getReleaseByTag({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/releases",    "title": "getReleases",    "name": "getReleases",    "description": "<p>List releases for a repository.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getReleases({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/stats/code_frequency",    "title": "getStatsCodeFrequency",    "name": "getStatsCodeFrequency",    "description": "<p>Get the number of additions and deletions per week.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getStatsCodeFrequency({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/stats/commit_activity",    "title": "getStatsCommitActivity",    "name": "getStatsCommitActivity",    "description": "<p>Get the last year of commit activity data.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getStatsCommitActivity({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/stats/contributors",    "title": "getStatsContributors",    "name": "getStatsContributors",    "description": "<p>Get contributors list with additions, deletions, and commit counts.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getStatsContributors({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/stats/participation",    "title": "getStatsParticipation",    "name": "getStatsParticipation",    "description": "<p>Get the weekly commit count for the repository owner and everyone else.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getStatsParticipation({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/stats/punch_card",    "title": "getStatsPunchCard",    "name": "getStatsPunchCard",    "description": "<p>Get the number of commits per hour in each day.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getStatsPunchCard({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/commits/:sha/statuses",    "title": "getStatuses",    "name": "getStatuses",    "description": "<p>Get status for a specfic ref.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getStatuses({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/tags",    "title": "getTags",    "name": "getTags",    "description": "<p>Get tags for the specified repository.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getTags({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/teams",    "title": "getTeams",    "name": "getTeams",    "description": "<p>Get teams for the specified repository.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getTeams({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/releases/:id/assets",    "title": "listAssets",    "name": "listAssets",    "description": "<p>List assets for a release.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.listAssets({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/repos/:user/:repo/merges",    "title": "merge",    "name": "merge",    "description": "<p>Perform a merge.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "base",            "description": "<p>The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "head",            "description": "<p>The branch (or git ref) where your changes are implemented.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "commit_message",            "description": "<p>Commit message to use for the merge commit. If omitted, a default message will be used.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.merge({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repositories/:id",    "title": "one",    "name": "one",    "description": "<p>Get a specific repo.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.one({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/repos/:user/:repo/hooks/:id/pings",    "title": "pingHook",    "name": "pingHook",    "description": "<p>Ping a hook.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.pingHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "delete",    "url": "/repos/:user/:repo/collaborators/:collabuser",    "title": "removeCollaborator",    "name": "removeCollaborator",    "description": "<p>Remove user as a collaborator.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "collabuser",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.removeCollaborator({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/repos/:user/:repo/hooks/:id/test",    "title": "testHook",    "name": "testHook",    "description": "<p>Test a [push] hook.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.testHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "patch",    "url": "/repos/:user/:repo/comments/:id",    "title": "updateCommitComment",    "name": "updateCommitComment",    "description": "<p>Update a commit comment.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "body",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.updateCommitComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "put",    "url": "/repos/:user/:repo/contents/:path",    "title": "updateFile",    "name": "updateFile",    "description": "<p>Update a file.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "path",            "description": "<p>The content path.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>The commit message.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>The updated file content, Base64 encoded.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": "<p>The blob SHA of the file being replaced.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "branch",            "description": "<p>The branch name. If not provided, uses the repository’s default branch (usually master).</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": true,            "field": "committer",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.updateFile({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/repos/:user/:repo/releases/:id/assets",    "title": "uploadAsset",    "name": "uploadAsset",    "description": "<p>Upload a release asset.</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The file name of the asset. This should be set in a URI query parameter.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "label",            "description": "<p>An alternate short description of the asset. Used in place of the filename. This should be set in a URI query parameter.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.uploadAsset({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/search/code",    "title": "code",    "name": "code",    "description": "<p>Search code.</p>",    "group": "search",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "q",            "description": "<p>Search Term</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "description": "<p>The sort field. Can only be indexed, which indicates how recently a file has been indexed by the GitHub search infrastructure. Default: results are sorted by best match.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "order",            "defaultValue": "desc",            "description": "<p>asc or desc</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.search.code({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "search"  },  {    "type": "get",    "url": "/legacy/user/email/:email",    "title": "email",    "name": "email",    "description": "<p>Search against public email addresses.</p>",    "group": "search",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>The email address</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.search.email({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "search"  },  {    "type": "get",    "url": "/search/issues",    "title": "issues",    "name": "issues",    "description": "<p>Search issues.</p>",    "group": "search",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "q",            "description": "<p>Search Term</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "description": "<p>The sort field. Can be comments, created, or updated. Default: results are sorted by best match.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "order",            "defaultValue": "desc",            "description": "<p>asc or desc</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.search.issues({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "search"  },  {    "type": "get",    "url": "/search/repositories",    "title": "repos",    "name": "repos",    "description": "<p>Search repositories.</p>",    "group": "search",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "q",            "description": "<p>Search Term</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "description": "<p>stars, forks, or updated</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "order",            "defaultValue": "desc",            "description": "<p>asc or desc</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.search.repos({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "search"  },  {    "type": "get",    "url": "/search/users",    "title": "users",    "name": "users",    "description": "<p>Search users.</p>",    "group": "search",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "q",            "description": "<p>Search Term</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "description": "<p>The sort field. Can be followers, repositories, or joined. Default: results are sorted by best match.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "order",            "defaultValue": "desc",            "description": "<p>asc or desc</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.search.users({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "search"  },  {    "type": "post",    "url": "/user/emails",    "title": "addEmails",    "name": "addEmails",    "description": "<p>Add email address(es)</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "body",            "description": "<p>You can post a single email address or an array of addresses.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.addEmails({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "get",    "url": "/user/following/:user",    "title": "checkFollowing",    "name": "checkFollowing",    "description": "<p>Check if you are following a user</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.checkFollowing({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "get",    "url": "/users/:user/following/:other_user",    "title": "checkIfOneFollowersOther",    "name": "checkIfOneFollowersOther",    "description": "<p>Check if one user follows another</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "other_user",            "description": "<p>Other user</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.checkIfOneFollowersOther({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "post",    "url": "/user/keys",    "title": "createKey",    "name": "createKey",    "description": "<p>Create a public key</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "key",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.createKey({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "delete",    "url": "/user/emails",    "title": "deleteEmails",    "name": "deleteEmails",    "description": "<p>Delete email address(es)</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "body",            "description": "<p>You can post a single email address or an array of addresses.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.deleteEmails({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "delete",    "url": "/user/keys/:id",    "title": "deleteKey",    "name": "deleteKey",    "description": "<p>Delete a public key</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.deleteKey({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "delete",    "url": "/users/:user/site_admin",    "title": "demote",    "name": "demote",    "description": "<p>Demote a site administrator to an ordinary user</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.demote({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "patch",    "url": "/user/memberships/orgs/:org",    "title": "editOrganizationMembership",    "name": "editOrganizationMembership",    "description": "<p>Edit your organization membership</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "state",            "description": "<p>The state that the membership should be in. Only &quot;active&quot; will be accepted.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.editOrganizationMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "put",    "url": "/user/following/:user",    "title": "followUser",    "name": "followUser",    "description": "<p>Follow a user</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.followUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "get",    "url": "/user",    "title": "get",    "name": "get",    "description": "<p>Get the authenticated user</p>",    "group": "users",    "examples": [      {        "title": "ex:",        "content": "github.users.get({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "get",    "url": "/users",    "title": "getAll",    "name": "getAll",    "description": "<p>Get all users</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "since",            "description": "<p>The integer ID of the last User that you’ve seen.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.getAll({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "get",    "url": "/user/:id",    "title": "getById",    "name": "getById",    "description": "<p>Get a single user by GitHub ID</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.getById({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "get",    "url": "/user/emails",    "title": "getEmails",    "name": "getEmails",    "description": "<p>List email addresses for a user</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.getEmails({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "get",    "url": "/users/followers",    "title": "getFollowers",    "name": "getFollowers",    "description": "<p>List the authenticated user's followers</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.getFollowers({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "get",    "url": "/users/:user/followers",    "title": "getFollowersForUser",    "name": "getFollowersForUser",    "description": "<p>List a user's followers</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.getFollowersForUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "get",    "url": "/user/following",    "title": "getFollowing",    "name": "getFollowing",    "description": "<p>List who the authenticated user is following</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.getFollowing({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "get",    "url": "/users/:user/following",    "title": "getFollowingForUser",    "name": "getFollowingForUser",    "description": "<p>List who a user is following</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.getFollowingForUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "get",    "url": "/users/:user",    "title": "getForUser",    "name": "getForUser",    "description": "<p>Get a single user</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.getForUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "get",    "url": "/user/keys/:id",    "title": "getKey",    "name": "getKey",    "description": "<p>Get a single public key</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.getKey({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "get",    "url": "/user/keys",    "title": "getKeys",    "name": "getKeys",    "description": "<p>List your public keys</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.getKeys({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "get",    "url": "/users/:user/keys",    "title": "getKeysForUser",    "name": "getKeysForUser",    "description": "<p>List public keys for a user</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.getKeysForUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "get",    "url": "/user/memberships/orgs/:org",    "title": "getOrganizationMembership",    "name": "getOrganizationMembership",    "description": "<p>Get your organization membership</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.getOrganizationMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "get",    "url": "/user/orgs",    "title": "getOrgs",    "name": "getOrgs",    "description": "<p>Get your organizations</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.getOrgs({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "get",    "url": "/user/teams",    "title": "getTeams",    "name": "getTeams",    "description": "<p>Get your teams</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "defaultValue": "30",            "description": "<p>A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.getTeams({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "put",    "url": "/users/:user/site_admin",    "title": "promote",    "name": "promote",    "description": "<p>Promote an ordinary user to a site administrator</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.promote({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "put",    "url": "/users/:user/suspended",    "title": "suspend",    "name": "suspend",    "description": "<p>Suspend a user</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.suspend({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "delete",    "url": "/user/following/:user",    "title": "unfollowUser",    "name": "unfollowUser",    "description": "<p>Unfollow a user</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.unfollowUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "delete",    "url": "/users/:user/suspended",    "title": "unsuspend",    "name": "unsuspend",    "description": "<p>Unsuspend a user</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.unsuspend({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  },  {    "type": "patch",    "url": "/user",    "title": "update",    "name": "update",    "description": "<p>Update the authenticated user</p>",    "group": "users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>The new name of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>Publicly visible email address.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "blog",            "description": "<p>The new blog URL of the user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "company",            "description": "<p>The new company of the user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "location",            "description": "<p>The new location of the user.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "hireable",            "description": "<p>The new hiring availability of the user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "bio",            "description": "<p>The new short biography of the user.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.users.update({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "users"  }] });
